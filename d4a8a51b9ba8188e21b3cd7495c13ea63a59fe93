{
  "comments": [
    {
      "key": {
        "uuid": "0144b839_abf62936",
        "filename": "java/src/main/java/com/google/protobuf/nano/CodedOutputByteBufferNano.java",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 1022968
      },
      "writtenOn": "2014-12-29T11:04:14Z",
      "side": 1,
      "message": "max bytes per char in UTF-8 is actually 4 bytes (the new standard) [6 bytes in old standard].\n\nhttp://en.wikipedia.org/wiki/UTF-8\n\nJava could handle Unicode U+10000 to U+10FFFF through surrogate pairs. Those chars require 4 bytes in UTF-8.\n\nI\u0027m not aware of Protocol Buffer limiting the character range to at most U+FFFF, so better not assume.",
      "revId": "d4a8a51b9ba8188e21b3cd7495c13ea63a59fe93",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a12ccc7b_68bb6342",
        "filename": "java/src/main/java/com/google/protobuf/nano/CodedOutputByteBufferNano.java",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2014-12-30T02:35:06Z",
      "side": 1,
      "message": "Per java char, not per code point. All characters that take 4 bytes in UTF-8 are represented by a surrogate pair, so while they use 4 bytes of UTF-8 they\u0027re two chars in java.",
      "parentUuid": "0144b839_abf62936",
      "revId": "d4a8a51b9ba8188e21b3cd7495c13ea63a59fe93",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}